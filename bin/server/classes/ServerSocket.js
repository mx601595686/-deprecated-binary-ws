"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WS = require("ws");
const BaseSocket_1 = require("../../BaseSocket/classes/BaseSocket");
class ServerSocket extends BaseSocket_1.BaseSocket {
    constructor(configs, _socket) {
        const socket = _socket || new WS(configs.url, configs);
        super(socket, configs);
        this._socket.on('open', this.emit.bind(this, 'open'));
        this._socket.on('close', this.emit.bind(this, 'close'));
        this._socket.on('error', this.emit.bind(this, 'error'));
        this._socket.on('message', this._receiveData.bind(this));
    }
    _sendData(data) {
        return new Promise((resolve, reject) => {
            this._socket.send(data, { binary: true }, (err) => {
                err ? reject(err) : resolve();
            });
        });
    }
    close() {
        this._socket.close();
    }
}
exports.ServerSocket = ServerSocket;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci9jbGFzc2VzL1NlcnZlclNvY2tldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlCQUF5QjtBQUd6QixvRUFBaUU7QUFHakUsa0JBQTBCLFNBQVEsdUJBQVU7SUFJeEMsWUFBWSxPQUEyQixFQUFFLE9BQVk7UUFDakQsTUFBTSxNQUFNLEdBQUcsT0FBTyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFFdkQsS0FBSyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUV2QixJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBRVMsU0FBUyxDQUFDLElBQVk7UUFDNUIsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU07WUFDL0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsR0FBRztnQkFDMUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLEVBQUUsQ0FBQztZQUNsQyxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELEtBQUs7UUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3pCLENBQUM7Q0FDSjtBQTFCRCxvQ0EwQkMiLCJmaWxlIjoic2VydmVyL2NsYXNzZXMvU2VydmVyU29ja2V0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgV1MgZnJvbSAnd3MnO1xyXG5pbXBvcnQgKiBhcyBodHRwIGZyb20gJ2h0dHAnO1xyXG5cclxuaW1wb3J0IHsgQmFzZVNvY2tldCB9IGZyb20gJy4uLy4uL0Jhc2VTb2NrZXQvY2xhc3Nlcy9CYXNlU29ja2V0JztcclxuaW1wb3J0IHsgU2VydmVyU29ja2V0Q29uZmlnIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9TZXJ2ZXJTb2NrZXRDb25maWcnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNlcnZlclNvY2tldCBleHRlbmRzIEJhc2VTb2NrZXQge1xyXG5cclxuICAgIHByb3RlY3RlZCByZWFkb25seSBfc29ja2V0OiBXUztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWdzOiBTZXJ2ZXJTb2NrZXRDb25maWcsIF9zb2NrZXQ/OiBXUykge1xyXG4gICAgICAgIGNvbnN0IHNvY2tldCA9IF9zb2NrZXQgfHwgbmV3IFdTKGNvbmZpZ3MudXJsLCBjb25maWdzKTtcclxuXHJcbiAgICAgICAgc3VwZXIoc29ja2V0LCBjb25maWdzKTtcclxuXHJcbiAgICAgICAgdGhpcy5fc29ja2V0Lm9uKCdvcGVuJywgdGhpcy5lbWl0LmJpbmQodGhpcywgJ29wZW4nKSk7XHJcbiAgICAgICAgdGhpcy5fc29ja2V0Lm9uKCdjbG9zZScsIHRoaXMuZW1pdC5iaW5kKHRoaXMsICdjbG9zZScpKTtcclxuICAgICAgICB0aGlzLl9zb2NrZXQub24oJ2Vycm9yJywgdGhpcy5lbWl0LmJpbmQodGhpcywgJ2Vycm9yJykpO1xyXG4gICAgICAgIHRoaXMuX3NvY2tldC5vbignbWVzc2FnZScsIHRoaXMuX3JlY2VpdmVEYXRhLmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBfc2VuZERhdGEoZGF0YTogQnVmZmVyKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fc29ja2V0LnNlbmQoZGF0YSwgeyBiaW5hcnk6IHRydWUgfSwgKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX3NvY2tldC5jbG9zZSgpO1xyXG4gICAgfVxyXG59Il19
