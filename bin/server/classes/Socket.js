"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WS = require("ws");
const BaseSocket_1 = require("../../BaseSocket/classes/BaseSocket");
class Socket extends BaseSocket_1.BaseSocket {
    constructor(configs, _socket, _req) {
        const socket = _socket || new WS(configs.url, configs);
        super(socket, configs);
        if (_req)
            this.headers = _req.headers;
        else
            this.headers = {};
        this._socket.on('open', this.emit.bind(this, 'open'));
        this._socket.on('close', this.emit.bind(this, 'close'));
        this._socket.on('error', this.emit.bind(this, 'error'));
        this._socket.on('message', this._receiveData.bind(this));
    }
    _sendData(data) {
        return new Promise((resolve, reject) => {
            this._socket.send(data, { binary: true }, (err) => {
                err ? reject(err) : resolve();
            });
        });
    }
    close() {
        this._socket.close();
    }
}
exports.Socket = Socket;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci9jbGFzc2VzL1NvY2tldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlCQUF5QjtBQUd6QixvRUFBaUU7QUFHakUsWUFBb0IsU0FBUSx1QkFBVTtJQVNsQyxZQUFZLE9BQTJCLEVBQUUsT0FBWSxFQUFFLElBQTJCO1FBQzlFLE1BQU0sTUFBTSxHQUFHLE9BQU8sSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRXZELEtBQUssQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFFdkIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQUMsSUFBSTtZQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBRTlELElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFUyxTQUFTLENBQUMsSUFBWTtRQUM1QixNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTTtZQUMvQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxHQUFHO2dCQUMxQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sRUFBRSxDQUFDO1lBQ2xDLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsS0FBSztRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQztDQUNKO0FBakNELHdCQWlDQyIsImZpbGUiOiJzZXJ2ZXIvY2xhc3Nlcy9Tb2NrZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBXUyBmcm9tICd3cyc7XHJcbmltcG9ydCAqIGFzIGh0dHAgZnJvbSAnaHR0cCc7XHJcblxyXG5pbXBvcnQgeyBCYXNlU29ja2V0IH0gZnJvbSAnLi4vLi4vQmFzZVNvY2tldC9jbGFzc2VzL0Jhc2VTb2NrZXQnO1xyXG5pbXBvcnQgeyBTZXJ2ZXJTb2NrZXRDb25maWcgfSBmcm9tICcuLi9pbnRlcmZhY2VzL1NlcnZlclNvY2tldENvbmZpZyc7XHJcblxyXG5leHBvcnQgY2xhc3MgU29ja2V0IGV4dGVuZHMgQmFzZVNvY2tldCB7XHJcblxyXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9zb2NrZXQ6IFdTO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5a6i5oi356uv5LiO5pyN5Yqh5Zmo5bu656uL6L+e5o6l5pe277yM5Lyg6YCS55qEaHR0cCBoZWFkZXLjgILov5nkuKrlsZ7mgKflj6rmnInmnI3liqHlmajnq6/miY3mnIlcclxuICAgICAqL1xyXG4gICAgcmVhZG9ubHkgaGVhZGVyczogYW55O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3M6IFNlcnZlclNvY2tldENvbmZpZywgX3NvY2tldD86IFdTLCBfcmVxPzogaHR0cC5JbmNvbWluZ01lc3NhZ2UpIHtcclxuICAgICAgICBjb25zdCBzb2NrZXQgPSBfc29ja2V0IHx8IG5ldyBXUyhjb25maWdzLnVybCwgY29uZmlncyk7XHJcblxyXG4gICAgICAgIHN1cGVyKHNvY2tldCwgY29uZmlncyk7XHJcblxyXG4gICAgICAgIGlmIChfcmVxKSB0aGlzLmhlYWRlcnMgPSBfcmVxLmhlYWRlcnM7IGVsc2UgdGhpcy5oZWFkZXJzID0ge307XHJcblxyXG4gICAgICAgIHRoaXMuX3NvY2tldC5vbignb3BlbicsIHRoaXMuZW1pdC5iaW5kKHRoaXMsICdvcGVuJykpO1xyXG4gICAgICAgIHRoaXMuX3NvY2tldC5vbignY2xvc2UnLCB0aGlzLmVtaXQuYmluZCh0aGlzLCAnY2xvc2UnKSk7XHJcbiAgICAgICAgdGhpcy5fc29ja2V0Lm9uKCdlcnJvcicsIHRoaXMuZW1pdC5iaW5kKHRoaXMsICdlcnJvcicpKTtcclxuICAgICAgICB0aGlzLl9zb2NrZXQub24oJ21lc3NhZ2UnLCB0aGlzLl9yZWNlaXZlRGF0YS5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgX3NlbmREYXRhKGRhdGE6IEJ1ZmZlcik6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NvY2tldC5zZW5kKGRhdGEsIHsgYmluYXJ5OiB0cnVlIH0sIChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIGVyciA/IHJlamVjdChlcnIpIDogcmVzb2x2ZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9zb2NrZXQuY2xvc2UoKTtcclxuICAgIH1cclxufSJdfQ==
