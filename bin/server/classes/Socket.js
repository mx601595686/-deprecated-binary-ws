"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const WS = require("ws");
const BaseSocket_1 = require("../../BaseSocket/classes/BaseSocket");
class Socket extends BaseSocket_1.BaseSocket {
    constructor(configs, _socket) {
        const socket = _socket || new WS(configs.url, configs);
        super(socket, configs);
        this._socket.on('open', this.emit.bind(this, 'open'));
        this._socket.on('close', this.emit.bind(this, 'close'));
        this._socket.on('error', this.emit.bind(this, 'error'));
        this._socket.on('message', this._receiveData.bind(this));
    }
    _sendData(data) {
        return new Promise((resolve, reject) => {
            this._socket.send(data, { binary: true }, (err) => {
                err ? reject(err) : resolve();
            });
        });
    }
    close() {
        this._socket.close();
    }
}
exports.Socket = Socket;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci9jbGFzc2VzL1NvY2tldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlCQUF5QjtBQUN6QixvRUFBaUU7QUFJakUsWUFBb0IsU0FBUSx1QkFBVTtJQUlsQyxZQUFZLE9BQTJCLEVBQUUsT0FBWTtRQUNqRCxNQUFNLE1BQU0sR0FBRyxPQUFPLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUV2RCxLQUFLLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRXZCLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFUyxTQUFTLENBQUMsSUFBWTtRQUM1QixNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTTtZQUMvQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxHQUFHO2dCQUMxQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sRUFBRSxDQUFDO1lBQ2xDLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsS0FBSztRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQztDQUNKO0FBMUJELHdCQTBCQyIsImZpbGUiOiJzZXJ2ZXIvY2xhc3Nlcy9Tb2NrZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBXUyBmcm9tICd3cyc7XHJcbmltcG9ydCB7IEJhc2VTb2NrZXQgfSBmcm9tICcuLi8uLi9CYXNlU29ja2V0L2NsYXNzZXMvQmFzZVNvY2tldCc7XHJcbmltcG9ydCB7IFNlcnZlclNvY2tldENvbmZpZyB9IGZyb20gJy4uL2ludGVyZmFjZXMvU2VydmVyU29ja2V0Q29uZmlnJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgU29ja2V0IGV4dGVuZHMgQmFzZVNvY2tldCB7XHJcblxyXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9zb2NrZXQ6IFdTO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3M6IFNlcnZlclNvY2tldENvbmZpZywgX3NvY2tldD86IFdTKSB7XHJcbiAgICAgICAgY29uc3Qgc29ja2V0ID0gX3NvY2tldCB8fCBuZXcgV1MoY29uZmlncy51cmwsIGNvbmZpZ3MpO1xyXG5cclxuICAgICAgICBzdXBlcihzb2NrZXQsIGNvbmZpZ3MpO1xyXG5cclxuICAgICAgICB0aGlzLl9zb2NrZXQub24oJ29wZW4nLCB0aGlzLmVtaXQuYmluZCh0aGlzLCAnb3BlbicpKTtcclxuICAgICAgICB0aGlzLl9zb2NrZXQub24oJ2Nsb3NlJywgdGhpcy5lbWl0LmJpbmQodGhpcywgJ2Nsb3NlJykpO1xyXG4gICAgICAgIHRoaXMuX3NvY2tldC5vbignZXJyb3InLCB0aGlzLmVtaXQuYmluZCh0aGlzLCAnZXJyb3InKSk7XHJcbiAgICAgICAgdGhpcy5fc29ja2V0Lm9uKCdtZXNzYWdlJywgdGhpcy5fcmVjZWl2ZURhdGEuYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIF9zZW5kRGF0YShkYXRhOiBCdWZmZXIpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9zb2NrZXQuc2VuZChkYXRhLCB7IGJpbmFyeTogdHJ1ZSB9LCAoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBlcnIgPyByZWplY3QoZXJyKSA6IHJlc29sdmUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fc29ja2V0LmNsb3NlKCk7XHJcbiAgICB9XHJcbn0iXX0=
